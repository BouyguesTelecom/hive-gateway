diff --git a/dist/esm/index.cjs b/dist/esm/index.cjs
index 25704ac0fad2fa788f732666b8d95e3fb87521d4..c92838d729062f27325fc8f4c332f4aa94ab5412 100755
--- a/dist/esm/index.cjs
+++ b/dist/esm/index.cjs
@@ -1,2 +1,2 @@
 "use strict";var E=Object.defineProperty;var u=(e,t)=>E(e,"name",{value:t,configurable:!0});var S=require("node:worker_threads"),f=require("../node-features-roYmp9jK.cjs"),F=require("../register-CVZT-Tul.cjs");require("../get-pipe-path-BoR10qr8.cjs"),require("node:module");var m=require("node:path"),h=require("node:url");require("get-tsconfig");var c=require("../register-DCnOAxY2.cjs"),U=require("node:fs");require("esbuild"),require("node:crypto");var l=require("../index-B4SIRlEU.cjs"),k=require("../client-D6NvIMSC.cjs");require("../require-DBpSESet.cjs");var L=require("node:fs/promises");require("module"),require("../temporary-directory-B83uKxJF.cjs"),require("node:os"),require("node:net");const p={active:!0},J=u(async e=>{if(!e)throw new Error(`tsx must be loaded with --import instead of --loader
-The --loader flag was deprecated in Node v20.6.0 and v18.19.0`);p.namespace=e.namespace,e.tsconfig!==!1&&c.loadTsconfig(e.tsconfig??process.env.TSX_TSCONFIG_PATH),e.port&&(p.port=e.port,e.port.on("message",t=>{t==="deactivate"&&(p.active=!1,e.port.postMessage({type:"deactivated"}))}))},"initialize"),N=u(()=>(c.loadTsconfig(process.env.TSX_TSCONFIG_PATH),"process.setSourceMapsEnabled(true);"),"globalPreload"),g=new Map,O=u(async e=>{if(g.has(e))return g.get(e);if(!await U.promises.access(e).then(()=>!0,()=>!1)){g.set(e,void 0);return}const s=await U.promises.readFile(e,"utf8");try{const r=JSON.parse(s);return g.set(e,r),r}catch{throw new Error(`Error parsing: ${e}`)}},"readPackageJson"),M=u(async e=>{let t=new URL("package.json",e);for(;!t.pathname.endsWith("/node_modules/package.json");){const s=h.fileURLToPath(t),r=await O(s);if(r)return r;const a=t;if(t=new URL("../package.json",t),t.pathname===a.pathname)break}},"findPackageJson"),b=u(async e=>(await M(e))?.type??"commonjs","getPackageType"),j=u(e=>{[e]=e.split("?");const t=m.extname(e);if(t===".mts")return"module";if(t===".cts")return"commonjs"},"getFormatFromExtension"),W=u(e=>{const t=j(e);if(t)return t;if(c.tsExtensionsPattern.test(e))return b(e)},"getFormatFromFileUrl"),P="tsx-namespace=",y=u(e=>{const t=e.indexOf(P);if(t===-1)return;const s=e[t-1];if(s!=="?"&&s!=="&")return;const r=t+P.length,a=e.indexOf("&",r);return a===-1?e.slice(r):e.slice(r,a)},"getNamespace"),R=f.isFeatureSupported(f.importAttributes)?"importAttributes":"importAssertions",A=u(async(e,t,s)=>{if(!p.active)return s(e,t);const r=y(e);if(p.namespace&&p.namespace!==r)return s(e,t);if(p.port){const n=new URL(e);n.searchParams.delete("tsx-namespace"),p.port.postMessage({type:"load",url:n.toString()})}k.parent.send&&k.parent.send({type:"dependency",path:e}),c.isJsonPattern.test(e)&&(t[R]||(t[R]={}),t[R].type="json");const a=await s(e,t),o=e.startsWith(c.fileUrlPrefix)?h.fileURLToPath(e):e;if(a.format==="commonjs"&&f.isFeatureSupported(f.esmLoadReadFile)&&a.responseURL?.startsWith("file:")&&!o.endsWith(".cjs")){const n=await L.readFile(new URL(e),"utf8");if(!o.endsWith(".js")||l.isESM(n)){const d=l.transformSync(n,o,{tsconfigRaw:c.fileMatcher?.(o)}),q=r?`${o}?namespace=${encodeURIComponent(r)}`:o;return a.responseURL=`data:text/javascript,${encodeURIComponent(d.code)}?filePath=${encodeURIComponent(q)}`,a}}if(!a.source)return a;const i=a.source.toString();if(a.format==="json"||c.tsExtensionsPattern.test(e)){const n=await l.transform(i,o,{tsconfigRaw:m.isAbsolute(o)?c.fileMatcher?.(o):void 0});return{format:"module",source:c.inlineSourceMap(n)}}if(a.format==="module"){const n=l.transformDynamicImport(o,i);n&&(a.source=c.inlineSourceMap(n))}return a},"load"),v=u(e=>{if(e.url)return e.url;const t=e.message.match(/^Cannot find module '([^']+)'/);if(t){const[,r]=t;return r}const s=e.message.match(/^Cannot find package '([^']+)'/);if(s){const[,r]=s;if(!m.isAbsolute(r))return;const a=h.pathToFileURL(r);if(a.pathname.endsWith("/")&&(a.pathname+="package.json"),a.pathname.endsWith("/package.json")){const o=l.readJsonFile(a);if(o?.main)return new URL(o.main,a).toString()}else return a.toString()}},"getMissingPathFromNotFound"),w=u(async(e,t,s,r)=>{const a=c.mapTsExtensions(e);if(!a)return;let o;for(const i of a)try{return await s(i,t)}catch(n){const{code:d}=n;if(d!=="ERR_MODULE_NOT_FOUND"&&d!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw n;o=n}if(r)throw o},"resolveExtensions"),I=u(async(e,t,s)=>{if((e.startsWith(c.fileUrlPrefix)||c.isRelativePath(e))&&(c.tsExtensionsPattern.test(t.parentURL)||c.allowJs)){const r=await w(e,t,s);if(r)return r}try{return await s(e,t)}catch(r){if(r instanceof Error){const a=r;if(a.code==="ERR_MODULE_NOT_FOUND"){const o=v(a);if(o){const i=await w(o,t,s);if(i)return i}}}throw r}},"resolveBase"),T=u(async(e,t,s)=>{if((e==="."||e===".."||e.endsWith("/.."))&&(e+="/"),c.isDirectoryPattern.test(e)){const r=new URL(e,t.parentURL);return r.pathname=m.join(r.pathname,"index"),await w(r.toString(),t,s,!0)}try{return await I(e,t,s)}catch(r){if(r instanceof Error){const a=r;if(a.code==="ERR_UNSUPPORTED_DIR_IMPORT"){const o=v(a);if(o)try{return await w(`${o}/index`,t,s,!0)}catch(i){const n=i,{message:d}=n;throw n.message=n.message.replace(`${"/index".replace("/",m.sep)}'`,"'"),n.stack=n.stack.replace(d,n.message),n}}}throw r}},"resolveDirectory"),D=u(async(e,t,s)=>{if(!c.requestAcceptsQuery(e)&&c.tsconfigPathsMatcher&&!t.parentURL?.includes("/node_modules/")){const r=c.tsconfigPathsMatcher(e);for(const a of r)try{return await T(h.pathToFileURL(a).toString(),t,s)}catch{}}return T(e,t,s)},"resolveTsPaths"),_="tsx://",C=u(async(e,t,s)=>{if(!p.active||e.startsWith("node:"))return s(e,t);let r=y(e)??(t.parentURL&&y(t.parentURL));if(p.namespace){let n;if(e.startsWith(_)){try{n=JSON.parse(e.slice(_.length))}catch{}n?.namespace&&(r=n.namespace)}if(p.namespace!==r)return s(e,t);n&&(e=n.specifier,t.parentURL=n.parentURL)}const[a,o]=e.split("?"),i=await D(a,t,s);return i.format==="builtin"||(!i.format&&i.url.startsWith(c.fileUrlPrefix)&&(i.format=await W(i.url)),o&&(i.url+=`?${o}`),r&&!i.url.includes(P)&&(i.url+=(i.url.includes("?")?"&":"?")+P+r)),i},"resolve");f.isFeatureSupported(f.moduleRegister)&&S.isMainThread&&F.register(),exports.globalPreload=N,exports.initialize=J,exports.load=A,exports.resolve=C;
+The --loader flag was deprecated in Node v20.6.0 and v18.19.0`);p.namespace=e.namespace,e.tsconfig!==!1&&c.loadTsconfig(e.tsconfig??process.env.TSX_TSCONFIG_PATH),e.port&&(p.port=e.port,e.port.on("message",t=>{t==="deactivate"&&(p.active=!1,e.port.postMessage({type:"deactivated"}))}))},"initialize"),N=u(()=>(c.loadTsconfig(process.env.TSX_TSCONFIG_PATH),"process.setSourceMapsEnabled(true);"),"globalPreload"),g=new Map,O=u(async e=>{if(g.has(e))return g.get(e);if(!await U.promises.access(e).then(()=>!0,()=>!1)){g.set(e,void 0);return}const s=await U.promises.readFile(e,"utf8");try{const r=JSON.parse(s);return g.set(e,r),r}catch{throw new Error(`Error parsing: ${e}`)}},"readPackageJson"),M=u(async e=>{let t=new URL("package.json",e);for(;!t.pathname.endsWith("/node_modules/package.json");){const s=h.fileURLToPath(t),r=await O(s);if(r)return r;const a=t;if(t=new URL("../package.json",t),t.pathname===a.pathname)break}},"findPackageJson"),b=u(async e=>(await M(e))?.type??"commonjs","getPackageType"),j=u(e=>{[e]=e.split("?");const t=m.extname(e);if(t===".mts")return"module";if(t===".cts")return"commonjs"},"getFormatFromExtension"),W=u(e=>{const t=j(e);if(t)return t;if(c.tsExtensionsPattern.test(e))return b(e)},"getFormatFromFileUrl"),P="tsx-namespace=",y=u(e=>{const t=e.indexOf(P);if(t===-1)return;const s=e[t-1];if(s!=="?"&&s!=="&")return;const r=t+P.length,a=e.indexOf("&",r);return a===-1?e.slice(r):e.slice(r,a)},"getNamespace"),R=f.isFeatureSupported(f.importAttributes)?"importAttributes":"importAssertions",A=u(async(e,t,s)=>{if(!p.active)return s(e,t);const r=y(e);if(p.namespace&&p.namespace!==r)return s(e,t);if(p.port){const n=new URL(e);n.searchParams.delete("tsx-namespace"),p.port.postMessage({type:"load",url:n.toString()})}k.parent.send&&k.parent.send({type:"dependency",path:e}),c.isJsonPattern.test(e)&&(t[R]||(t[R]={}),t[R].type="json");const a=await s(e,t),o=e.startsWith(c.fileUrlPrefix)?h.fileURLToPath(e):e;if(a.format==="commonjs"&&f.isFeatureSupported(f.esmLoadReadFile)&&a.responseURL?.startsWith("file:")&&!o.endsWith(".cjs")){const n=await L.readFile(new URL(e),"utf8");if(!o.endsWith(".js")||l.isESM(n)){const d=l.transformSync(n,o,{tsconfigRaw:c.fileMatcher?.(o)}),q=r?`${o}?namespace=${encodeURIComponent(r)}`:o;return a.responseURL=`data:text/javascript,${encodeURIComponent(d.code)}?filePath=${encodeURIComponent(q)}`,a}}if(!a.source)return a;const i=a.source.toString();if(a.format==="json"||c.tsExtensionsPattern.test(e)){const n=await l.transform(i,o,{tsconfigRaw:m.isAbsolute(o)?c.fileMatcher?.(o):void 0});return{format:"module",source:c.inlineSourceMap(n)}}if(a.format==="module"){const n=l.transformDynamicImport(o,i);n&&(a.source=c.inlineSourceMap(n))}return a},"load"),v=u(e=>{if(e.url)return e.url;const t=e.message.match(/^Cannot find module '([^']+)'/);if(t){const[,r]=t;return r}const s=e.message.match(/^Cannot find package '([^']+)'/);if(s){const[,r]=s;if(!m.isAbsolute(r))return;const a=h.pathToFileURL(r);if(a.pathname.endsWith("/")&&(a.pathname+="package.json"),a.pathname.endsWith("/package.json")){const o=l.readJsonFile(a);if(o?.main)return new URL(o.main,a).toString()}else return a.toString()}},"getMissingPathFromNotFound"),w=u(async(e,t,s,r)=>{const a=c.mapTsExtensions(e);if(!a)return;let o;for(const i of a)try{return await s(i,t)}catch(n){const{code:d}=n;if(d!=="ERR_MODULE_NOT_FOUND"&&d!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw n;o=n}if(r)throw o},"resolveExtensions"),I=u(async(e,t,s)=>{if((e.startsWith(c.fileUrlPrefix)||c.isRelativePath(e))&&(c.tsExtensionsPattern.test(t.parentURL)||c.allowJs)){const r=await w(e,t,s);if(r)return r}try{return await s(e,t)}catch(r){if(r instanceof Error){const a=r;if(a.code==="ERR_MODULE_NOT_FOUND"){const o=v(a);if(o){const i=await w(o,t,s);if(i)return i}}}throw r}},"resolveBase"),T=u(async(e,t,s)=>{if((e==="."||e===".."||e.endsWith("/.."))&&(e+="/"),c.isDirectoryPattern.test(e)){const r=new URL(e,t.parentURL);return r.pathname=m.join(r.pathname,"index"),await w(r.toString(),t,s,!0)}try{return await I(e,t,s)}catch(r){if(r instanceof Error){const a=r;if(a.code==="ERR_UNSUPPORTED_DIR_IMPORT"){const o=v(a);if(o)try{return await w(`${o}/index`,t,s,!0)}catch(i){const n=i,{message:d}=n;throw n.message=n.message.replace(`${"/index".replace("/",m.sep)}'`,"'"),n.stack=n.stack.replace(d,n.message),n}}}throw r}},"resolveDirectory"),D=u(async(e,t,s)=>{if(!c.requestAcceptsQuery(e)&&c.tsconfigPathsMatcher){const r=c.tsconfigPathsMatcher(e);for(const a of r)try{return await T(h.pathToFileURL(a).toString(),t,s)}catch{}}return T(e,t,s)},"resolveTsPaths"),_="tsx://",C=u(async(e,t,s)=>{if(!p.active||e.startsWith("node:"))return s(e,t);let r=y(e)??(t.parentURL&&y(t.parentURL));if(p.namespace){let n;if(e.startsWith(_)){try{n=JSON.parse(e.slice(_.length))}catch{}n?.namespace&&(r=n.namespace)}if(p.namespace!==r)return s(e,t);n&&(e=n.specifier,t.parentURL=n.parentURL)}const[a,o]=e.split("?"),i=await D(a,t,s);return i.format==="builtin"||(!i.format&&i.url.startsWith(c.fileUrlPrefix)&&(i.format=await W(i.url)),o&&(i.url+=`?${o}`),r&&!i.url.includes(P)&&(i.url+=(i.url.includes("?")?"&":"?")+P+r)),i},"resolve");f.isFeatureSupported(f.moduleRegister)&&S.isMainThread&&F.register(),exports.globalPreload=N,exports.initialize=J,exports.load=A,exports.resolve=C;
diff --git a/dist/esm/index.mjs b/dist/esm/index.mjs
index 417680003bd6143a39581e1ac714a05fd6331a3f..fba673ac719abb5b70a8e00a41cfff646adb282a 100755
--- a/dist/esm/index.mjs
+++ b/dist/esm/index.mjs
@@ -1,2 +1,2 @@
 var b=Object.defineProperty;var c=(t,a)=>b(t,"name",{value:a,configurable:!0});import{isMainThread as j}from"node:worker_threads";import{i as g,a as v,e as M,m as W}from"../node-features-_8ZFwP_x.mjs";import{r as A}from"../register-RyGUjI6j.mjs";import"../get-pipe-path-BHW2eJdv.mjs";import"node:module";import f from"node:path";import{fileURLToPath as R,pathToFileURL as U}from"node:url";import"get-tsconfig";import{l as k,t as l,b as I,f as w,d as E,e as T,g as D,h as _,j as C,m as $,k as q,n as G}from"../register-C3TE0KFF.mjs";import S from"node:fs";import"esbuild";import"node:crypto";import{i as H,a as X,t as B,b as Q,r as z}from"../index-DlKgSVBb.mjs";import{p as L}from"../client-BQVF1NaW.mjs";import"../require-BnyFnlmk.mjs";import{readFile as K}from"node:fs/promises";import"module";import"../temporary-directory-CwHp0_NW.mjs";import"node:os";import"node:net";const m={active:!0},x=c(async t=>{if(!t)throw new Error(`tsx must be loaded with --import instead of --loader
-The --loader flag was deprecated in Node v20.6.0 and v18.19.0`);m.namespace=t.namespace,t.tsconfig!==!1&&k(t.tsconfig??process.env.TSX_TSCONFIG_PATH),t.port&&(m.port=t.port,t.port.on("message",a=>{a==="deactivate"&&(m.active=!1,t.port.postMessage({type:"deactivated"}))}))},"initialize"),V=c(()=>(k(process.env.TSX_TSCONFIG_PATH),"process.setSourceMapsEnabled(true);"),"globalPreload"),d=new Map,Y=c(async t=>{if(d.has(t))return d.get(t);if(!await S.promises.access(t).then(()=>!0,()=>!1)){d.set(t,void 0);return}const r=await S.promises.readFile(t,"utf8");try{const e=JSON.parse(r);return d.set(t,e),e}catch{throw new Error(`Error parsing: ${t}`)}},"readPackageJson"),Z=c(async t=>{let a=new URL("package.json",t);for(;!a.pathname.endsWith("/node_modules/package.json");){const r=R(a),e=await Y(r);if(e)return e;const s=a;if(a=new URL("../package.json",a),a.pathname===s.pathname)break}},"findPackageJson"),tt=c(async t=>(await Z(t))?.type??"commonjs","getPackageType"),at=c(t=>{[t]=t.split("?");const a=f.extname(t);if(a===".mts")return"module";if(a===".cts")return"commonjs"},"getFormatFromExtension"),et=c(t=>{const a=at(t);if(a)return a;if(l.test(t))return tt(t)},"getFormatFromFileUrl"),u="tsx-namespace=",P=c(t=>{const a=t.indexOf(u);if(a===-1)return;const r=t[a-1];if(r!=="?"&&r!=="&")return;const e=a+u.length,s=t.indexOf("&",e);return s===-1?t.slice(e):t.slice(e,s)},"getNamespace"),y=g(v)?"importAttributes":"importAssertions",st=c(async(t,a,r)=>{if(!m.active)return r(t,a);const e=P(t);if(m.namespace&&m.namespace!==e)return r(t,a);if(m.port){const n=new URL(t);n.searchParams.delete("tsx-namespace"),m.port.postMessage({type:"load",url:n.toString()})}L.send&&L.send({type:"dependency",path:t}),I.test(t)&&(a[y]||(a[y]={}),a[y].type="json");const s=await r(t,a),o=t.startsWith(w)?R(t):t;if(s.format==="commonjs"&&g(M)&&s.responseURL?.startsWith("file:")&&!o.endsWith(".cjs")){const n=await K(new URL(t),"utf8");if(!o.endsWith(".js")||H(n)){const p=X(n,o,{tsconfigRaw:E?.(o)}),O=e?`${o}?namespace=${encodeURIComponent(e)}`:o;return s.responseURL=`data:text/javascript,${encodeURIComponent(p.code)}?filePath=${encodeURIComponent(O)}`,s}}if(!s.source)return s;const i=s.source.toString();if(s.format==="json"||l.test(t)){const n=await B(i,o,{tsconfigRaw:f.isAbsolute(o)?E?.(o):void 0});return{format:"module",source:T(n)}}if(s.format==="module"){const n=Q(o,i);n&&(s.source=T(n))}return s},"load"),F=c(t=>{if(t.url)return t.url;const a=t.message.match(/^Cannot find module '([^']+)'/);if(a){const[,e]=a;return e}const r=t.message.match(/^Cannot find package '([^']+)'/);if(r){const[,e]=r;if(!f.isAbsolute(e))return;const s=U(e);if(s.pathname.endsWith("/")&&(s.pathname+="package.json"),s.pathname.endsWith("/package.json")){const o=z(s);if(o?.main)return new URL(o.main,s).toString()}else return s.toString()}},"getMissingPathFromNotFound"),h=c(async(t,a,r,e)=>{const s=$(t);if(!s)return;let o;for(const i of s)try{return await r(i,a)}catch(n){const{code:p}=n;if(p!=="ERR_MODULE_NOT_FOUND"&&p!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw n;o=n}if(e)throw o},"resolveExtensions"),rt=c(async(t,a,r)=>{if((t.startsWith(w)||q(t))&&(l.test(a.parentURL)||G)){const e=await h(t,a,r);if(e)return e}try{return await r(t,a)}catch(e){if(e instanceof Error){const s=e;if(s.code==="ERR_MODULE_NOT_FOUND"){const o=F(s);if(o){const i=await h(o,a,r);if(i)return i}}}throw e}},"resolveBase"),J=c(async(t,a,r)=>{if((t==="."||t===".."||t.endsWith("/.."))&&(t+="/"),C.test(t)){const e=new URL(t,a.parentURL);return e.pathname=f.join(e.pathname,"index"),await h(e.toString(),a,r,!0)}try{return await rt(t,a,r)}catch(e){if(e instanceof Error){const s=e;if(s.code==="ERR_UNSUPPORTED_DIR_IMPORT"){const o=F(s);if(o)try{return await h(`${o}/index`,a,r,!0)}catch(i){const n=i,{message:p}=n;throw n.message=n.message.replace(`${"/index".replace("/",f.sep)}'`,"'"),n.stack=n.stack.replace(p,n.message),n}}}throw e}},"resolveDirectory"),nt=c(async(t,a,r)=>{if(!D(t)&&_&&!a.parentURL?.includes("/node_modules/")){const e=_(t);for(const s of e)try{return await J(U(s).toString(),a,r)}catch{}}return J(t,a,r)},"resolveTsPaths"),N="tsx://",ot=c(async(t,a,r)=>{if(!m.active||t.startsWith("node:"))return r(t,a);let e=P(t)??(a.parentURL&&P(a.parentURL));if(m.namespace){let n;if(t.startsWith(N)){try{n=JSON.parse(t.slice(N.length))}catch{}n?.namespace&&(e=n.namespace)}if(m.namespace!==e)return r(t,a);n&&(t=n.specifier,a.parentURL=n.parentURL)}const[s,o]=t.split("?"),i=await nt(s,a,r);return i.format==="builtin"||(!i.format&&i.url.startsWith(w)&&(i.format=await et(i.url)),o&&(i.url+=`?${o}`),e&&!i.url.includes(u)&&(i.url+=(i.url.includes("?")?"&":"?")+u+e)),i},"resolve");g(W)&&j&&A();export{V as globalPreload,x as initialize,st as load,ot as resolve};
+The --loader flag was deprecated in Node v20.6.0 and v18.19.0`);m.namespace=t.namespace,t.tsconfig!==!1&&k(t.tsconfig??process.env.TSX_TSCONFIG_PATH),t.port&&(m.port=t.port,t.port.on("message",a=>{a==="deactivate"&&(m.active=!1,t.port.postMessage({type:"deactivated"}))}))},"initialize"),V=c(()=>(k(process.env.TSX_TSCONFIG_PATH),"process.setSourceMapsEnabled(true);"),"globalPreload"),d=new Map,Y=c(async t=>{if(d.has(t))return d.get(t);if(!await S.promises.access(t).then(()=>!0,()=>!1)){d.set(t,void 0);return}const r=await S.promises.readFile(t,"utf8");try{const e=JSON.parse(r);return d.set(t,e),e}catch{throw new Error(`Error parsing: ${t}`)}},"readPackageJson"),Z=c(async t=>{let a=new URL("package.json",t);for(;!a.pathname.endsWith("/node_modules/package.json");){const r=R(a),e=await Y(r);if(e)return e;const s=a;if(a=new URL("../package.json",a),a.pathname===s.pathname)break}},"findPackageJson"),tt=c(async t=>(await Z(t))?.type??"commonjs","getPackageType"),at=c(t=>{[t]=t.split("?");const a=f.extname(t);if(a===".mts")return"module";if(a===".cts")return"commonjs"},"getFormatFromExtension"),et=c(t=>{const a=at(t);if(a)return a;if(l.test(t))return tt(t)},"getFormatFromFileUrl"),u="tsx-namespace=",P=c(t=>{const a=t.indexOf(u);if(a===-1)return;const r=t[a-1];if(r!=="?"&&r!=="&")return;const e=a+u.length,s=t.indexOf("&",e);return s===-1?t.slice(e):t.slice(e,s)},"getNamespace"),y=g(v)?"importAttributes":"importAssertions",st=c(async(t,a,r)=>{if(!m.active)return r(t,a);const e=P(t);if(m.namespace&&m.namespace!==e)return r(t,a);if(m.port){const n=new URL(t);n.searchParams.delete("tsx-namespace"),m.port.postMessage({type:"load",url:n.toString()})}L.send&&L.send({type:"dependency",path:t}),I.test(t)&&(a[y]||(a[y]={}),a[y].type="json");const s=await r(t,a),o=t.startsWith(w)?R(t):t;if(s.format==="commonjs"&&g(M)&&s.responseURL?.startsWith("file:")&&!o.endsWith(".cjs")){const n=await K(new URL(t),"utf8");if(!o.endsWith(".js")||H(n)){const p=X(n,o,{tsconfigRaw:E?.(o)}),O=e?`${o}?namespace=${encodeURIComponent(e)}`:o;return s.responseURL=`data:text/javascript,${encodeURIComponent(p.code)}?filePath=${encodeURIComponent(O)}`,s}}if(!s.source)return s;const i=s.source.toString();if(s.format==="json"||l.test(t)){const n=await B(i,o,{tsconfigRaw:f.isAbsolute(o)?E?.(o):void 0});return{format:"module",source:T(n)}}if(s.format==="module"){const n=Q(o,i);n&&(s.source=T(n))}return s},"load"),F=c(t=>{if(t.url)return t.url;const a=t.message.match(/^Cannot find module '([^']+)'/);if(a){const[,e]=a;return e}const r=t.message.match(/^Cannot find package '([^']+)'/);if(r){const[,e]=r;if(!f.isAbsolute(e))return;const s=U(e);if(s.pathname.endsWith("/")&&(s.pathname+="package.json"),s.pathname.endsWith("/package.json")){const o=z(s);if(o?.main)return new URL(o.main,s).toString()}else return s.toString()}},"getMissingPathFromNotFound"),h=c(async(t,a,r,e)=>{const s=$(t);if(!s)return;let o;for(const i of s)try{return await r(i,a)}catch(n){const{code:p}=n;if(p!=="ERR_MODULE_NOT_FOUND"&&p!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw n;o=n}if(e)throw o},"resolveExtensions"),rt=c(async(t,a,r)=>{if((t.startsWith(w)||q(t))&&(l.test(a.parentURL)||G)){const e=await h(t,a,r);if(e)return e}try{return await r(t,a)}catch(e){if(e instanceof Error){const s=e;if(s.code==="ERR_MODULE_NOT_FOUND"){const o=F(s);if(o){const i=await h(o,a,r);if(i)return i}}}throw e}},"resolveBase"),J=c(async(t,a,r)=>{if((t==="."||t===".."||t.endsWith("/.."))&&(t+="/"),C.test(t)){const e=new URL(t,a.parentURL);return e.pathname=f.join(e.pathname,"index"),await h(e.toString(),a,r,!0)}try{return await rt(t,a,r)}catch(e){if(e instanceof Error){const s=e;if(s.code==="ERR_UNSUPPORTED_DIR_IMPORT"){const o=F(s);if(o)try{return await h(`${o}/index`,a,r,!0)}catch(i){const n=i,{message:p}=n;throw n.message=n.message.replace(`${"/index".replace("/",f.sep)}'`,"'"),n.stack=n.stack.replace(p,n.message),n}}}throw e}},"resolveDirectory"),nt=c(async(t,a,r)=>{if(!D(t)&&_){const e=_(t);for(const s of e)try{return await J(U(s).toString(),a,r)}catch{}}return J(t,a,r)},"resolveTsPaths"),N="tsx://",ot=c(async(t,a,r)=>{if(!m.active||t.startsWith("node:"))return r(t,a);let e=P(t)??(a.parentURL&&P(a.parentURL));if(m.namespace){let n;if(t.startsWith(N)){try{n=JSON.parse(t.slice(N.length))}catch{}n?.namespace&&(e=n.namespace)}if(m.namespace!==e)return r(t,a);n&&(t=n.specifier,a.parentURL=n.parentURL)}const[s,o]=t.split("?"),i=await nt(s,a,r);return i.format==="builtin"||(!i.format&&i.url.startsWith(w)&&(i.format=await et(i.url)),o&&(i.url+=`?${o}`),e&&!i.url.includes(u)&&(i.url+=(i.url.includes("?")?"&":"?")+u+e)),i},"resolve");g(W)&&j&&A();export{V as globalPreload,x as initialize,st as load,ot as resolve};

diff --git a/build/esm/detectors/platform/node/machine-id/getMachineId.js b/build/esm/detectors/platform/node/machine-id/getMachineId.js
index 267f4af2d1a33a3e17ef1009da5669d3683694f6..7334bf0c7f8b763fd31de1f380e1890dbeb674de 100644
--- a/build/esm/detectors/platform/node/machine-id/getMachineId.js
+++ b/build/esm/detectors/platform/node/machine-id/getMachineId.js
@@ -13,23 +13,24 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-import * as process from 'process';
-var getMachineId;
-switch (process.platform) {
-    case 'darwin':
-        (getMachineId = require('./getMachineId-darwin').getMachineId);
-        break;
-    case 'linux':
-        (getMachineId = require('./getMachineId-linux').getMachineId);
-        break;
-    case 'freebsd':
-        (getMachineId = require('./getMachineId-bsd').getMachineId);
-        break;
-    case 'win32':
-        (getMachineId = require('./getMachineId-win').getMachineId);
-        break;
-    default:
-        (getMachineId = require('./getMachineId-unsupported').getMachineId);
+import { getMachineId as getMachineIdDarwin } from './getMachineId-darwin.js';
+import { getMachineId as getMachineIdLinux } from './getMachineId-linux.js';
+import { getMachineId as getMachineIdBsd } from './getMachineId-bsd.js';
+import { getMachineId as getMachineIdWin } from './getMachineId-win.js';
+import { getMachineId as getMachineIdUnsupported } from './getMachineId-unsupported.js';
+
+export function getMachineId(...args) {
+    switch (process.platform) {
+        case 'darwin':
+            return getMachineIdDarwin(...args);
+        case 'linux':
+            return getMachineIdLinux(...args);
+        case 'freebsd':
+            return getMachineIdBsd(...args);
+        case 'win32':
+            return getMachineIdWin(...args);
+        default:
+            return getMachineIdUnsupported(...args);
+    }
 }
-export { getMachineId };
 //# sourceMappingURL=getMachineId.js.map
\ No newline at end of file
diff --git a/build/esnext/detectors/platform/node/machine-id/getMachineId.js b/build/esnext/detectors/platform/node/machine-id/getMachineId.js
index 6600fb658cb3330dde569141fafd51c9b2f215e1..7334bf0c7f8b763fd31de1f380e1890dbeb674de 100644
--- a/build/esnext/detectors/platform/node/machine-id/getMachineId.js
+++ b/build/esnext/detectors/platform/node/machine-id/getMachineId.js
@@ -13,23 +13,24 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-import * as process from 'process';
-let getMachineId;
-switch (process.platform) {
-    case 'darwin':
-        ({ getMachineId } = require('./getMachineId-darwin'));
-        break;
-    case 'linux':
-        ({ getMachineId } = require('./getMachineId-linux'));
-        break;
-    case 'freebsd':
-        ({ getMachineId } = require('./getMachineId-bsd'));
-        break;
-    case 'win32':
-        ({ getMachineId } = require('./getMachineId-win'));
-        break;
-    default:
-        ({ getMachineId } = require('./getMachineId-unsupported'));
+import { getMachineId as getMachineIdDarwin } from './getMachineId-darwin.js';
+import { getMachineId as getMachineIdLinux } from './getMachineId-linux.js';
+import { getMachineId as getMachineIdBsd } from './getMachineId-bsd.js';
+import { getMachineId as getMachineIdWin } from './getMachineId-win.js';
+import { getMachineId as getMachineIdUnsupported } from './getMachineId-unsupported.js';
+
+export function getMachineId(...args) {
+    switch (process.platform) {
+        case 'darwin':
+            return getMachineIdDarwin(...args);
+        case 'linux':
+            return getMachineIdLinux(...args);
+        case 'freebsd':
+            return getMachineIdBsd(...args);
+        case 'win32':
+            return getMachineIdWin(...args);
+        default:
+            return getMachineIdUnsupported(...args);
+    }
 }
-export { getMachineId };
 //# sourceMappingURL=getMachineId.js.map
\ No newline at end of file
